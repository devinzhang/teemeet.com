<?php

include_once('teemeet_heartbeat.features.inc');

/**
 * Implementation of hook_init().
 */
function teemeet_heartbeat_init() {
  drupal_add_css(drupal_get_path('module', 'teemeet_heartbeat') . '/teemeet_heartbeat.css');
}

/**
 * Implementation of hook_token_values().
 */
function teemeet_heartbeat_token_values($type, $object = NULL) {
	$values = array();
	if ($type == 'user' && arg(1) == 'approve' && !isset($object->og_groups[arg(2)])) {
		$gid = arg(2);
		$user_approved = arg(3);
	    $result = db_fetch_object(db_query("select introduction from ".MEMBER_PROFILE_TBL." where gid=%d and uid=%d",$gid,$user_approved));
		$values['introduction-in-group'] = $result->introduction;
	}
	return $values;
}

/**
 * Implementation of hook_token_list().
 */
function teemeet_heartbeat_token_list($type='all') {
	if ($type == 'user') {
		$tokens['user']['introduction-in-group'] = t('Introduction added when a user joined a group.');
		return $tokens;
	}
}
								  
/**
 * Implementation of hook_heartbeat_register_access_types().
 */
function teemeet_heartbeat_heartbeat_register_access_types() {
  return array(
    0 => array(
      'name' => 'Site user activity',
      'class' => 'SiteUserActivity',
      'path' => 'site_user_activity.inc',
      'module' => 'teemeet_heartbeat',
      'access' => TRUE
    ),
    1 => array(
      'name' => 'Latest activity',
      'class' => 'LatestActivity',
      'path' => 'latest_activity.inc',
      'module' => 'teemeet_heartbeat',
      'access' => TRUE
    ),
    2 => array(
      'name' => 'My groups activity',
      'class' => 'MyGroupsActivity',
      'path' => 'my_groups_activity.inc',
      'module' => 'teemeet_heartbeat',
      'access' => TRUE
    ),
  );
}

/**
 * Implementation of hook_greeting_insert().
 */
function teemeet_heartbeat_greeting_insert($entry) {
    $message_id = 'custom_add_greeting';
	
	$group_node = node_load($entry->created['curr_gid']);
	$group_link = l($group_node->title, $group_node->path);
    $variables = array(
      '@recipient' => l(heartbeat_user_load($entry->recipient)->name, 'user/' . $entry->recipient),
      '@author' => l(heartbeat_user_load($entry->author)->name, 'user/' . $entry->author),
      '@message' => $entry->message,
      '@group' => $group_link,
      '@time' => $entry->created,
    );

    heartbeat_api_log($message_id, $entry->author, $entry->recipient, $entry->curr_gid, 0, $variables);
}

/**
 * Implementation of hook_greeting_delete().
 */
function teemeet_heartbeat_greeting_delete($entry) {
    $message_id = 'custom_delete_greeting';
	$group_node = node_load($entry->created['curr_gid']);
	$group_link = l($group_node->title, $group_node->path);
    $variables = array(
      '@recipient' => l(heartbeat_user_load($entry->recipient)->name, 'user/' . $entry->recipient),
      '@author' => l(heartbeat_user_load($entry->author)->name, 'user/' . $entry->author),
      '@message' => $entry->message,
      '@group' => $group_link,
      '@time' => $entry->created,
    );

    heartbeat_api_log($message_id, $entry->author, $entry->recipient, $entry->gid, 0, $variables);
}

/**
 * Implementation of hook_heartbeat_theme_alter().
 *
 * Take out messages you want to retheme.
 * This can be by adding buttons, html controls, repositioning elements, ...
 * In this example we add buttons and place icons for some message types.
 * In other cases, a custom avatar is used.
 *
 * @param $messages Array of heartbeat activity messages
 * @param $stream HeartbeatAccess as the object that holds the current stream scope
 */
function teemeet_heartbeat_heartbeat_theme_alter(&$messages, HeartbeatAccess $stream) {
  foreach ($messages as $key => $message) {
    $timeago = '<span class="activity-time">';
    $timeago .= t('@time ago', array('@time' => format_interval(($_SERVER['REQUEST_TIME'] - $message->timestamp), 1)));
    $timeago .= '</span>';
	
    $messages[$key]->display_time = FALSE;
	
	
	
    if ($message->message_id == 'custom_user_signup_event') {
		if($message->uid) {
		$group_node = node_load($message->nid); 
		$group_path = $group_node->path; 
		$group_user = user_load($message->uid);
		$group_user_name = l($group_user->name, $group_path.'/member/'.$message->uid.'/ingroup/'.$belonged_gid);
		watchdog('custom_user_signup_event', 'm nid'. $message->nid, array());
		
		}
      $message->message = $message->variables['@picture'];
      $message->message .= '<div class="teemeet-message-front">';
    //  $message->message .= $message->variables['@user'] . $timeago . '<br/>';
	   $message->message .= $group_user_name . $timeago . '<br/>';
      $message->message .= t('is going to a meetup with ') . $message->variables['@group'];
      $message->message .= '</div>';
    }

    if ($message->message_id == 'custom_add_node') {
	
	 $heartbeat_node = node_load($message->nid);
	 $group_user = user_load($message->uid);
		 if($heartbeat_node->type == 'forum_topic') {
			$belonged_gid = array_shift($heartbeat_node->og_groups);
			$group_node = node_load($belonged_gid); 
			$group_path = $group_node->path; 

			$group_user_name = l($group_user->name, $group_path.'/member/'.$message->uid.'/ingroup/'.$belonged_gid);
			$group_node_title = l($heartbeat_node->title,$group_path.'/node/'.$message->nid );
			
		//	watchdog('teemeet_heartbeat', 'node type= '.$heartbeat_node->type .'nid=' .$heartbeat_node->nid.' group path='.$group_node->path, array(), WATCHDOG_ERROR);
	 //	watchdog('teemeet_heartbeat', 'message_uid'.$message->uid, array(), WATCHDOG_ERROR);
		} else if($heartbeat_node->type == 'event'){
			$belonged_gid = array_shift($heartbeat_node->og_groups);
			$group_node = node_load($belonged_gid); 
			$group_path = $group_node->path; 

			$group_user_name = l($group_user->name, $group_path.'/member/'.$message->uid.'/ingroup/'.$belonged_gid);
			$group_node_title = l($heartbeat_node->title,$group_path.'/node/'.$message->nid );
			
			
	 //	watchdog('teemeet_heartbeat', 'event uid'.$message->uid.'event gid'.$belonged_gid, array(), WATCHDOG_ERROR);
		}
		
      if ($stream->stream->name == 'ogheartbeat') {
		  $message->message = '<div class="teemeet-message-type">';
		  $message->message .= t('new ') . $message->variables['@node_type'];
		  $message->message .= '</div>';
		  $message->message .= '<div class="teemeet-message-content">';
		  $message->message .= $message->variables['@user_picture'];
	   //   $message->message .= $message->variables['@username'] . ' has added ' . $message->variables['@node_title'] . '<br/>';
		 $message->message .= $group_user_name . t(' has added ') . $group_node_title . '<br/>';
		 
		  $message->message .= $timeago;
		  $message->message .= '</div>';
      } else {
		  $message->message = $message->variables['@user_picture'];
		  $message->message .= '<div class="teemeet-message-content">';
		 // $message->message .= $message->variables['@username'] . ' has added ' . $message->variables['@node_title'] . '<br/>';
		  $message->message .= $group_user_name . t(' has added ') . $group_node_title . '<br/>';
		  $message->message .= $timeago;
		  $message->message .= '</div>';
      }
    }

    if ($message->message_id == 'custom_add_comment') {
		// add group path 
		$heartbeat_node = node_load($message->nid);
		$group_user = user_load($message->uid);
		if($heartbeat_node->type == 'forum_topic') {
			$belonged_gid = array_shift($heartbeat_node->og_groups);
			$group_node = node_load($belonged_gid); 
			$group_path = $group_node->path; 

			$group_user_name = l($group_user->name, $group_path.'/member/'.$message->uid.'/ingroup/'.$belonged_gid);
			$group_node_title = l($heartbeat_node->title,$group_path.'/node/'.$message->nid );
		}
		
		if($heartbeat_node->type == 'group') {
			
			
			$group_path = $heartbeat_node->path; 

			$group_user_name = l($group_user->name, $group_path.'/member/'.$message->uid.'/ingroup/'.$belonged_gid);
			$group_node_title = l($heartbeat_node->title,$group_path );
		}
		
		
//	watchdog('teemeet_heartbeat', 'type='. $heartbeat_node->type. 'comment uid'.$message->uid.'node nid'.$message->nid, array());
	// end of add group path
		
      if ($stream->stream->name == 'ogheartbeat') {
      $message->message = '<div class="teemeet-message-type">';
      $message->message .= t('new comment');
      $message->message .= '</div>';
      $message->message .= '<div class="teemeet-message-content">';
      $message->message .= $message->variables['@picture'];
    //  $message->message .= $message->variables['@user'] . t(' commented on ') . $message->variables['@content'] . '<br/>';
	  $message->message .= $group_user_name . t(' commented on ') . $group_node_title . '<br/>';
	  
      $message->message .= $timeago;
      $message->message .= '</div>';
      } else {
		
		$group_node = node_load($message->nid); 
		$group_path = $group_node->path; 

			$group_user_name = l($group_user->name, $group_path.'/member/'.$message->uid.'/ingroup/'.$belonged_gid);
			$group_node_title = l($heartbeat_node->title,$group_path.'/node/'.$message->nid );
		//watchdog('teemeet_hea', 'variables='.implode(',',$message->variables ).' ss='.$ss, array());
	
      $message->message = $message->variables['@picture'];
      $message->message .= '<div class="teemeet-message-content">';
    //  $message->message .= $message->variables['@user'] . ' commented on ' . $message->variables['@content'] . '<br/>';
		//here has a bug, can't be fixed at this time. $message->variables['@content'] don't have prefixed with group path
	  $message->message .= $group_user_name . t(' commented on ') . $message->variables['@content'] . '<br/>';
	   
	  $message->message .= $timeago;
      $message->message .= '</div>';
      }
    }

    if ($message->message_id == 'custom_user_approved') {
		$gid = $message->nid;
		
		$group_node = node_load($gid);
		$group_user = user_load($message->uid);
	//	watchdog('custom_user_approved)', 'message_uid'.$message->uid.'$message->nid'.$message->nid, array());
		$intro = db_result(db_query("select introduction from ".MEMBER_PROFILE_TBL." where gid=%d and uid=%d",$gid,$message->uid));
		$group_path = $group_node->path; 
		$group_title = l($group_node->title, $group_path); 
		$group_user_name = l($group_user->name, $group_path.'/member/'.$message->uid.'/ingroup/'.$gid);
			
			
      if ($stream->stream->name == 'ogheartbeat') {
        $message->message = '<div class="teemeet-message-type">';
        $message->message .= t('new member');
        $message->message .= '</div>';
        $message->message .= '<div class="teemeet-message-content">';
        $message->message .= $message->variables['@avatar'];
       // $message->message .= $message->variables['@user'] . ' joined' . '<br/>';
        $message->message .= $group_user_name . t(' joined') . '<br/>';
		$message->message .= $timeago;
        $message->message .= '</div>';
      } else {
        $message->message = $message->variables['@avatar'];
        $message->message .= '<div class="teemeet-message-content clearfix">';
 //       $message->message .= $message->variables['@user'] . t(' joined the group') . '<br/>';
 //       $message->message .= $message->variables['@introduction'] . '<br/>';
        $message->message .= $group_user_name . t(' joined the group ') .$group_title. '<br/>';
        $message->message .= $intro . '<br/>';
   
		$message->message .= $timeago;
        $message->message .= '</div>';
      }
    }

    if ($message->message_id == 'custom_reply_rsvp') {
      if ($stream->stream->name == 'ogheartbeat') {
        $message->message = '<div class="teemeet-message-type">';
        $message->message .= t('new rsvp');
        $message->message .= '</div>';
        $message->message .= '<div class="teemeet-message-content">';
        $message->message .= $message->variables['@avator'];
        $message->message .= $message->variables['@user']. t(' RSVPed '). $message->variables['@result']. t(' for '). $message->variables['@title']. '<br/>';
        $message->message .= $timeago;
        $message->message .= '</div>';
      }
    }
  }

}
